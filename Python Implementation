#Revised Strategy: HMM + Time Filter

import pandas as pd
import yfinance as yf
from hmmlearn import hmm
import pytz

# 1. Fetch 1-hour ES data
data = yf.download('ES=F', start='2023-01-01', end='2024-01-01', interval='1h')

# 2. Filter for High-Volume Windows (NY Open: 9:30 AM ET)
ny_tz = pytz.timezone('America/New_York')
data.index = data.index.tz_convert(ny_tz)
data['Hour'] = data.index.hour
data['Minute'] = data.index.minute
data = data[(data['Hour'] == 9) & (data['Minute'] >= 30) | (data['Hour'] == 10)]  # 9:30â€“10:30 AM ET

# 3. Train HMM on Filtered Data
features = data[['Returns', 'Volatility']].values
model = hmm.GaussianHMM(n_components=3, covariance_type="diag", n_iter=1000)
model.fit(features)
hidden_states = model.predict(features)
data['Regime'] = hidden_states  # Regime labels (e.g., 0=Bear, 1=Sideways, 2=Bull)

# 4. Define Trading Rules
def generate_signal(row):
    if row['Regime'] == 2:  # Bull regime
        return 'Buy'
    elif row['Regime'] == 0:  # Bear regime
        return 'Sell'
    else:
        return 'Hold'

data['Signal'] = data.apply(generate_signal, axis=1)
